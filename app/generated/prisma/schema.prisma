// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  role      String    @default("admin")
  blogs     Blog[]    @relation("UserBlogs")
  products  Product[] @relation("UserProducts")
  projects  Project[] @relation("UserProjects")
}

model Blog {
  id           String   @id @default(uuid())
  title        String
  slug         String   @unique
  excerpt      String
  content      String
  image        String
  author       String
  authorAvatar String
  date         DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  authorId     String?
  user         User?    @relation("UserBlogs", fields: [authorId], references: [id])
}

model Project {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  authorId   String?
  challenges String[]
  date       String
  details    String
  images     String[]
  name       String
  summary    String
  user       User?    @relation("UserProjects", fields: [authorId], references: [id])
}

model Product {
  id        String   @id @default(uuid())
  title     String
  text      String
  image     String
  icons     String[] // Array of icon names
  details   String?
  pdfs      Json? // Array of PDF objects: [{name: string, file: string}]
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String?
  user      User?    @relation("UserProducts", fields: [authorId], references: [id])
}
